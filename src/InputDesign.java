
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class InputDesign extends javax.swing.JFrame {
    
    private int quantumTime;
    private int numOfProcesses;
    private int counter = 1;
    private int arrivalTime;
    private int burstTime;
    DefaultTableModel processDetails;
    ArrayList<Process> processList=new ArrayList<>();
    ArrayList<Process> finishedList=new ArrayList<>();
    

    /**
     * Creates new form input
     */
    public InputDesign() {
        initComponents();
        processDetails = (DefaultTableModel) tblProcessData.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        proName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProcessData = new javax.swing.JTable();
        runBtn = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        quantumTxt = new javax.swing.JTextField();
        quantum = new javax.swing.JLabel();
        Arrivaltxt = new javax.swing.JTextField();
        ArrivalL = new javax.swing.JLabel();
        Bursttxt = new javax.swing.JTextField();
        BurstL = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 51));

        tblProcessData.setBackground(new java.awt.Color(0, 204, 204));
        tblProcessData.setFont(new java.awt.Font("Tempus Sans ITC", 0, 12)); // NOI18N
        tblProcessData.setForeground(new java.awt.Color(153, 0, 153));
        tblProcessData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Process ID", "Arrival Time", "Burst Time"
            }
        ));
        jScrollPane2.setViewportView(tblProcessData);

        runBtn.setBackground(new java.awt.Color(204, 153, 255));
        runBtn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        runBtn.setForeground(new java.awt.Color(255, 102, 0));
        runBtn.setText("Next");
        runBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBtnActionPerformed(evt);
            }
        });

        inputPanel.setBackground(new java.awt.Color(255, 153, 153));
        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inputs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 0, 14), new java.awt.Color(102, 0, 0)), "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 0, 12))); // NOI18N
        inputPanel.setForeground(new java.awt.Color(204, 0, 204));

        quantumTxt.setBackground(new java.awt.Color(255, 255, 204));
        quantumTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantumTxtActionPerformed(evt);
            }
        });

        quantum.setBackground(new java.awt.Color(255, 255, 204));
        quantum.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        quantum.setForeground(new java.awt.Color(153, 0, 0));
        quantum.setText("Quantum time");

        Arrivaltxt.setBackground(new java.awt.Color(255, 255, 204));
        Arrivaltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArrivaltxtActionPerformed(evt);
            }
        });

        ArrivalL.setBackground(new java.awt.Color(204, 102, 255));
        ArrivalL.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        ArrivalL.setForeground(new java.awt.Color(102, 0, 204));
        ArrivalL.setText("Arrival Time");

        Bursttxt.setBackground(new java.awt.Color(255, 255, 204));
        Bursttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BursttxtActionPerformed(evt);
            }
        });

        BurstL.setBackground(new java.awt.Color(255, 255, 204));
        BurstL.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        BurstL.setForeground(new java.awt.Color(102, 0, 204));
        BurstL.setText("Burst Time");

        btnCreate.setBackground(new java.awt.Color(204, 153, 255));
        btnCreate.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(204, 153, 0));
        btnCreate.setText("Create Process");
        btnCreate.setBorderPainted(false);
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(ArrivalL)
                        .addGap(110, 110, 110)
                        .addComponent(BurstL, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(quantumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(quantum, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(Arrivaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(Bursttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(302, 322, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Arrivaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bursttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ArrivalL, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BurstL))
                .addGap(41, 41, 41)
                .addComponent(btnCreate)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(proName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(runBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(proName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(runBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quantumTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantumTxtActionPerformed
        quantumTime = Integer.parseInt(quantumTxt.getText());
        Arrivaltxt.requestFocus();
        System.out.println(quantumTime);
    }//GEN-LAST:event_quantumTxtActionPerformed

    private void ArrivaltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArrivaltxtActionPerformed
        int arrivalTime=Integer.parseInt(Arrivaltxt.getText());
        Bursttxt.requestFocus();
    }//GEN-LAST:event_ArrivaltxtActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String pid = "P" + Integer.toString(counter++);
        int arrivalTime=Integer.parseInt(Arrivaltxt.getText());
        int burstTime=Integer.parseInt(Bursttxt.getText());
        Arrivaltxt.requestFocus();
        Object[] data = {pid, arrivalTime, burstTime};
        processDetails.addRow(data);
        ClearText();
        processList.add(new Process(pid,arrivalTime,burstTime));
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void BursttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BursttxtActionPerformed
        int burstTime=Integer.parseInt(Bursttxt.getText());

    }//GEN-LAST:event_BursttxtActionPerformed

    private void runBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBtnActionPerformed
        numOfProcesses=processDetails.getRowCount();     
        Scheduler scheduler=new Scheduler(processList,quantumTime);
        finishedList=scheduler.runProcesses();
        OutputDesign outDes=new OutputDesign(scheduler.calcAvgWaiting(finishedList, numOfProcesses),scheduler.calcAvgTurn(finishedList,numOfProcesses),scheduler.getEvents());
        outDes.setSize(1500,600);
        this.setVisible(false);
        outDes.setVisible(true);
        
        
    }//GEN-LAST:event_runBtnActionPerformed

    private void ClearText(){
        Arrivaltxt.setText("");
        Bursttxt.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputDesign().setVisible(true);
            }
        });
    }
    
    private void addDataItem(){
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ArrivalL;
    private javax.swing.JTextField Arrivaltxt;
    private javax.swing.JLabel BurstL;
    private javax.swing.JTextField Bursttxt;
    private javax.swing.JButton btnCreate;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel proName;
    private javax.swing.JLabel quantum;
    private javax.swing.JTextField quantumTxt;
    private javax.swing.JButton runBtn;
    private javax.swing.JTable tblProcessData;
    // End of variables declaration//GEN-END:variables
}
